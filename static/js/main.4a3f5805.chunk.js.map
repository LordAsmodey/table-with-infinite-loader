{"version":3,"sources":["Components/PeopleTable/PeopleTable.tsx","utiles/RegExp.ts","Components/InputField/InputField.tsx","api/api.ts","Components/AddPersonForm/AddPersonForm.tsx","App.tsx","index.tsx"],"names":["PeopleTable","React","memo","props","rowsInTable","people","setNextPage","isLoading","onDelete","className","map","person","index","firstName","lastName","email","ip","description","onClick","id","type","cn","disabled","ipFormat","emailFormat","InputField","name","value","label","required","minLength","isEmail","isIp","onChange","useState","Math","random","toString","slice","touched","setTouched","hasEmpty","isMinLengthError","length","emailError","match","ipIsError","hasError","htmlFor","data-cy","classNames","placeholder","event","target","onBlur","BASE_URL","AddPersonForm","isOpen","setIsOpen","onAddPerson","setFirstName","setLastName","setEmail","setIp","setDescription","isServerError","setIsServerError","useMemo","clearForm","useCallback","addNewPersonHandler","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Error","response","catch","aria-label","onSubmit","preventDefault","App","setRowsInTable","isSelected","setIsSelected","isAddPersonFormOpen","setIsAddPersonFormOpen","setPeople","page","setPage","setIsLoading","isError","setIsError","useEffect","limit","getPeople","prevState","sort","a","b","filter","array","finally","onAddPersonHandler","onDeletePersonHandler","deletePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a3f5805.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../Types/Person';\n\ntype Props = {\n  rowsInTable: number,\n  people: Person[],\n  setNextPage: CallableFunction,\n  isLoading: boolean,\n  onDelete: (id: number) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo((props) => {\n  const {\n    rowsInTable,\n    people,\n    setNextPage,\n    isLoading,\n    onDelete,\n  } = props;\n\n  return (\n    <>\n      <table className=\"table is-hoverable is-fullwidth\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n            <th>IP Address</th>\n            <th>Description</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tfoot>\n          <tr>\n            <th>ID</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n            <th>IP Address</th>\n            <th>Description</th>\n            <th>Actions</th>\n          </tr>\n        </tfoot>\n        <tbody>\n          {people.map((person, index) => (\n            <tr key={person.id}>\n              <td>{index + 1}</td>\n              <td>{person.firstName}</td>\n              <td>\n                {person.lastName}\n              </td>\n              <td>{person.email}</td>\n              <td>{person.ip}</td>\n              <td>{person.description}</td>\n              <td>\n                <button\n                  className=\"button is-danger is-light\"\n                  onClick={() => {\n                    onDelete(person.id);\n                  }}\n                  type=\"button\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"is-flex is-justify-content-center\">\n        <button\n          className={cn('button is-info', { 'is-loading': isLoading })}\n          onClick={() => {\n            setNextPage();\n          }}\n          type=\"button\"\n          disabled={isLoading}\n        >\n          {`Load next ${rowsInTable} fields`}\n        </button>\n      </div>\n    </>\n  );\n});\n","// eslint-disable-next-line max-len\nexport const ipFormat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n// eslint-disable-next-line max-len\nexport const emailFormat = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { emailFormat, ipFormat } from '../../utiles/RegExp';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  minLength?: number,\n  isEmail?: boolean,\n  isIp?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const InputField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  minLength = 0,\n  isEmail = false,\n  isIp = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasEmpty = touched && required && !value;\n  const isMinLengthError = touched && minLength > value.length;\n  const emailError = touched && !value.match(emailFormat) && isEmail;\n  const ipIsError = touched && !value.match(ipFormat) && isIp;\n  const hasError = hasEmpty || isMinLengthError || emailError;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasEmpty && (\n        <p className=\"help is-danger\">{`${label} is required!`}</p>\n      )}\n      {isMinLengthError && (\n        <p className=\"help is-danger\">\n          {`Minimum field length is ${minLength}!`}\n        </p>\n      )}\n      {emailError && (\n        <p className=\"help is-danger\">\n          Email is not valid!\n        </p>\n      )}\n      {ipIsError && (\n        <p className=\"help is-danger\">\n          IP format is not valid!\n        </p>\n      )}\n    </div>\n  );\n};\n","import { addedPerson, Person } from '../Types/Person';\n\nconst BASE_URL = 'http://localhost:4000/people';\n\nexport function getPeople(page: number, limit: number): Promise<Person[]> {\n  return fetch(`${BASE_URL}?_page=${page}&_limit=${limit}`)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw new Error('Something went wrong');\n    });\n}\n\nexport function addPerson(person: addedPerson): Promise<Person> {\n  return fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n    },\n    body: JSON.stringify(person),\n  })\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw new Error('Something went wrong');\n    });\n}\n\nexport function deletePerson(id: number): Promise<Person> {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE',\n  })\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw new Error('Something went wrong');\n    });\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { InputField } from '../InputField/InputField';\nimport { addPerson } from '../../api/api';\nimport { Person } from '../../Types/Person';\nimport { emailFormat, ipFormat } from '../../utiles/RegExp';\n\ntype Props = {\n  isOpen: boolean,\n  setIsOpen: CallableFunction,\n  onAddPerson: (person: Person) => void;\n};\n\nexport const AddPersonForm: React.FC<Props> = React.memo((props) => {\n  const { isOpen, setIsOpen, onAddPerson } = props;\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [ip, setIp] = useState('');\n  const [description, setDescription] = useState('');\n  const [isServerError, setIsServerError] = useState(false);\n\n  const hasError = useMemo(() => {\n    return lastName.length > 0\n      && firstName.length > 0\n      && email.match(emailFormat)\n      && ip.match(ipFormat)\n      && description.length > 20;\n  }, [firstName, lastName, email, ip, description]);\n\n  const clearForm = useCallback(() => {\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setIp('');\n    setDescription('');\n  }, []);\n\n  const addNewPersonHandler = () => {\n    if (hasError) {\n      setIsServerError(false);\n      const newPerson = {\n        firstName,\n        lastName,\n        email,\n        ip,\n        description,\n      };\n\n      addPerson(newPerson)\n        .then((response) => {\n          onAddPerson(response);\n          clearForm();\n        })\n        .catch(() => setIsServerError(true));\n    }\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <div className={cn('modal', { 'is-active': isOpen })}>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">Add new person</p>\n              <button\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"close\"\n                onClick={() => {\n                  setIsOpen(false);\n                  clearForm();\n                }}\n              >\n              </button>\n            </header>\n            <section className=\"modal-card-body\">\n              <form onSubmit={\n                (event) => event.preventDefault()\n              }\n              >\n                <InputField\n                  name=\"First name\"\n                  value={firstName}\n                  label=\"First name\"\n                  required\n                  onChange={setFirstName}\n                />\n\n                <InputField\n                  name=\"Last name\"\n                  value={lastName}\n                  label=\"Last name\"\n                  required\n                  onChange={setLastName}\n                />\n\n                <InputField\n                  name=\"E-mail\"\n                  value={email}\n                  label=\"E-mail\"\n                  required\n                  isEmail\n                  onChange={setEmail}\n                />\n\n                <InputField\n                  name=\"Ip Address\"\n                  value={ip}\n                  label=\"IP Address\"\n                  isIp\n                  required\n                  minLength={8}\n                  onChange={setIp}\n                />\n\n                <InputField\n                  name=\"Description\"\n                  value={description}\n                  label=\"Description\"\n                  minLength={20}\n                  required\n                  onChange={setDescription}\n                />\n              </form>\n            </section>\n            <footer className=\"modal-card-foot\">\n\n              <button\n                type=\"button\"\n                className=\"button is-success\"\n                onClick={() => addNewPersonHandler()}\n                disabled={!hasError}\n              >\n                Add person\n              </button>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => clearForm()}\n              >\n                Clear form\n              </button>\n              {isServerError && (\n                <p className=\"help is-danger\">\n                  Something went wrong. Try again!\n                </p>\n              )}\n            </footer>\n          </div>\n        </div>\n      )}\n    </>\n  );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport { PeopleTable } from './Components/PeopleTable/PeopleTable';\nimport { AddPersonForm } from './Components/AddPersonForm/AddPersonForm';\nimport { Person } from './Types/Person';\nimport { deletePerson, getPeople } from './api/api';\n\nexport const App: React.FC = () => {\n  const [rowsInTable, setRowsInTable] = useState(5);\n  const [isSelected, setIsSelected] = useState(false);\n  const [isAddPersonFormOpen, setIsAddPersonFormOpen] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n    getPeople(page, rowsInTable)\n      .then((response) => {\n        setPeople((prevState) => {\n          if (page === 1) {\n            return [...response];\n          }\n\n          return [...prevState, ...response]\n            .sort((a, b) => a.id - b.id)\n            .filter((person, index, array) => {\n              if (array[index + 1]) {\n                return person.id !== array[index + 1].id;\n              }\n\n              return true;\n            });\n        });\n      }).catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, [rowsInTable, page]);\n\n  const setNextPage = useCallback(() => {\n    setPage((prevState) => prevState + 1);\n  }, []);\n\n  const onAddPersonHandler = useCallback((person: Person) => {\n    setPeople((prevState) => (\n      [...prevState, person]\n    ));\n  }, []);\n\n  const onDeletePersonHandler = useCallback((id: number) => {\n    deletePerson(id)\n      .then(() => {\n        setPeople((prevState) => prevState.filter(person => person.id !== id));\n      });\n  }, []);\n\n  return (\n    <div className=\"box app\">\n      <div\n        className=\"\n        box is-flex is-justify-content-space-around app__control-items\"\n      >\n        <button\n          type=\"button\"\n          className=\"button is-info\"\n          onClick={() => setIsAddPersonFormOpen(true)}\n        >\n          Add person\n        </button>\n\n        <div className=\"select\">\n          <select\n            value={rowsInTable}\n            onChange={(event) => {\n              setRowsInTable(+event.target.value);\n              setIsSelected(false);\n            }}\n            disabled={isSelected}\n          >\n            <option value=\"5\">Upload 5 fields</option>\n            <option value=\"6\">Upload 6 fields</option>\n            <option value=\"7\">Upload 7 fields</option>\n            <option value=\"8\">Upload 8 fields</option>\n            <option value=\"9\">Upload 9 fields</option>\n            <option value=\"10\">Upload 10 fields</option>\n            <option value=\"11\">Upload 11 fields</option>\n            <option value=\"12\">Upload 12 fields</option>\n            <option value=\"13\">Upload 13 fields</option>\n            <option value=\"14\">Upload 14 fields</option>\n            <option value=\"15\">Upload 15 fields</option>\n          </select>\n        </div>\n      </div>\n      {!isError && (\n        <PeopleTable\n          people={people}\n          rowsInTable={rowsInTable}\n          setNextPage={setNextPage}\n          isLoading={isLoading}\n          onDelete={onDeletePersonHandler}\n        />\n      )}\n      <AddPersonForm\n        isOpen={isAddPersonFormOpen}\n        setIsOpen={setIsAddPersonFormOpen}\n        onAddPerson={onAddPersonHandler}\n      />\n      {isError && (\n        <p className=\"help is-danger\">\n          Something went wrong. Try again!\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}